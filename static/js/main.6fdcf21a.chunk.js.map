{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/ContactForm/ContactForm.module.css","redux/selectors.js","redux/actions.js","redux/operations.js","components/Button/Button.jsx","components/Loader/Loader.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","reportWebVitals.js","redux/redusers.js","redux/store.js","index.js"],"names":["module","exports","getContacts","state","contacts","items","getIsLoading","loading","getFilter","filter","getFilteredContacts","createSelector","allContacts","lowerCasedFilter","toLocaleLowerCase","trim","contact","name","includes","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","axios","defaults","baseURL","Button","type","onClick","btnName","disabled","className","styles","button","Loader","color","height","width","timeout","connect","isLoading","dispatch","onSubmit","number","post","then","data","catch","error","addContact","useState","setName","setNumber","reset","e","preventDefault","names","map","toLowerCase","currentName","console","log","alert","addNewContact","form","label","form_input","pattern","title","required","value","onChange","currentTarget","form_btn","evt","target","input","onDelete","id","delete","deleteContact","a","get","useEffect","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","_","payload","combineReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6fdcf21a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__NIwCT\",\"input\":\"Filter_input__19ysn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__2ExX3\",\"button\":\"ContactList_button__1RCgB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__24UAK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__31iBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2bUl4\",\"label\":\"ContactForm_label__dwffq\",\"form_input\":\"ContactForm_form_input__3xC10\"};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts.items;\r\n\r\nconst getIsLoading = state => state.contacts.loading;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getFilteredContacts = createSelector(\r\n    [getContacts, getFilter], \r\n    (allContacts, filter) => {\r\n        const lowerCasedFilter = filter.toLocaleLowerCase().trim();\r\n        return allContacts.filter(contact => \r\n            contact.name.toLocaleLowerCase().includes(lowerCasedFilter));\r\n    },\r\n);\r\n\r\nexport { getContacts, getIsLoading, getFilter, getFilteredContacts }","import { createAction } from '@reduxjs/toolkit'\r\n\r\nconst getContactsRequest = createAction('contacts/getContactsRequest');\r\nconst getContactsSuccess = createAction('contacts/getContactsSuccess');\r\nconst getContactsError = createAction('contacts/getContactsError');\r\n\r\nconst addContactRequest = createAction('contacts/addContactRequest');\r\nconst addContactSuccess = createAction('contacts/addContactSuccess');\r\nconst addContactError = createAction('contacts/addContactError');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nconst deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nconst filterContacts = createAction('filter');\r\n\r\nexport { \r\n  getContactsRequest, getContactsSuccess, getContactsError,\r\n  addContactRequest, addContactSuccess, addContactError,\r\n  deleteContactRequest, deleteContactSuccess, deleteContactError,\r\n  filterContacts\r\n}\r\n\r\n","import { \r\n    getContactsRequest, getContactsSuccess, getContactsError,\r\n    addContactRequest, addContactSuccess, addContactError,\r\n    deleteContactRequest, deleteContactSuccess, deleteContactError\r\n  } from './actions';\r\n  import axios from \"axios\";\r\n  \r\n  axios.defaults.baseURL = 'http://localhost:4567';\r\n  \r\n  const getContacts = () => async dispatch => {\r\n    dispatch(getContactsRequest());\r\n    try {\r\n       const { data } = await axios.get('/contacts');\r\n        dispatch(getContactsSuccess(data));\r\n    } catch (error) {\r\n        dispatch(getContactsError(error));\r\n    };\r\n  };\r\n  \r\n   const addContact = (name, number) => dispatch => {\r\n    const contact = {\r\n        name,\r\n        number,\r\n    };  \r\n\r\n    dispatch(addContactRequest());\r\n  \r\n    axios.post('/contacts', contact)\r\n        .then(({ data }) => dispatch(addContactSuccess(data)))\r\n        .catch(error => dispatch(addContactError(error)));\r\n  };\r\n  \r\n  const deleteContact = id => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n  \r\n    axios.delete(`/contacts/${id}`)\r\n      .then(() => dispatch(deleteContactSuccess(id)))\r\n      .catch(error => dispatch(deleteContactError(error)));\r\n  };\r\n\r\nexport { getContacts, addContact, deleteContact }","import styles from './Button.module.css';\r\n\r\nfunction Button({ type, onClick, btnName, disabled }) {\r\n    return (\r\n      <button\r\n        type={type}\r\n        className={styles.button}\r\n        onClick={onClick}\r\n        disabled={disabled}\r\n      >\r\n        {btnName}\r\n      </button>\r\n    );\r\n  }\r\n  \r\n  export { Button };","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport LoaderSpinner from \"react-loader-spinner\";\r\nimport styles from './Loader.module.css';\r\n\r\nfunction Loader () {\r\n    return (\r\n        <div className={styles.Loader}>\r\n            <LoaderSpinner\r\n                type=\"Circles\"\r\n                color=\"#3f51b5\"\r\n                height={100}\r\n                width={100}\r\n                timeout={5000}\r\n                margin-left={100} \r\n                margin-top={10}\r\n            />\r\n        </div>\r\n        \r\n    );\r\n} \r\n\r\nexport { Loader };","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/operations';\r\nimport { getIsLoading, getContacts } from '../../redux/selectors';\r\nimport { Button } from '../Button/Button';\r\nimport styles from './ContactForm.module.css';\r\nimport { Loader } from '../Loader/Loader';\r\n\r\nfunction ContactForm({ contacts, onSubmit, isLoading }) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    \r\n    const addNewContact = (name, number) => {\r\n        const names = contacts.map((contact) => contact.name.toLowerCase());\r\n        const currentName = name.toLowerCase()\r\n        console.log(currentName)\r\n        if(names.includes(currentName))  {\r\n           return alert(`${name} is already exists`);\r\n        }\r\n\r\n        onSubmit(name, number);\r\n    }\r\n\r\n    const hendleSubmit = (e) => {\r\n        e.preventDefault();\r\n        addNewContact(name, number);\r\n        reset();\r\n    };\r\n    \r\n    const reset = () => {\r\n        setName(\"\");\r\n        setNumber(\"\");\r\n    };\r\n        return (\r\n            <>\r\n                <form onSubmit={hendleSubmit} className={styles.form}>\r\n                    \r\n                    <label className={styles.label}>\r\n                    Name\r\n                        <input \r\n                            className={styles.form_input}\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                            required\r\n                            value={name}\r\n                            onChange={(e) => {\r\n                                setName(e.currentTarget.value);\r\n                            }}/>\r\n                    </label>\r\n                    <label className={styles.label}>\r\n                    Number\r\n                        <input \r\n                            className={styles.form_input}\r\n                            type=\"tel\"\r\n                            name=\"number\"\r\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                            required\r\n                            value={number}\r\n                            onChange={(e) => {\r\n                                setNumber(e.currentTarget.value);\r\n                            }}/>\r\n                    </label>\r\n                    <Button type=\"submit\" btnName=\"Add contact\" disabled={!(name && number)} className={styles.form_btn} />\r\n                </form>\r\n                {isLoading && <Loader />}\r\n            </>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isLoading: getIsLoading(state),\r\n    contacts: getContacts(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSubmit: (name, number) => dispatch(addContact(name, number)),\r\n});\r\n\r\nContactForm.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    isLoading: PropTypes.bool,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import { connect } from 'react-redux';\r\nimport { getFilter } from '../../redux/selectors';\r\nimport { filterContacts } from '../../redux/actions';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChange }) {\r\n    return (\r\n        <label className={styles.label}>\r\n            Find contacts by name\r\n                <input type=\"text\" value={value} onChange={onChange} className={styles.input}/>\r\n        </label>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    value: getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChange: evt => dispatch(filterContacts(evt.target.value)),\r\n});\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact, getContacts } from '../../redux/operations';\r\nimport { getFilteredContacts } from '../../redux/selectors';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nfunction ContactList ({ contacts, onDelete,getContacts}) {\r\n    useEffect(() => {\r\n      getContacts();\r\n    }, [getContacts])\r\n\r\n    return (\r\n        <ul >\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li key={id} className={styles.contact}>\r\n            <span>\r\n              {name}: {number}\r\n            </span>\r\n            <button\r\n              className={styles.button}\r\n              type=\"button\"\r\n              onClick={() => onDelete(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getFilteredContacts(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDelete: id => dispatch(deleteContact(id)),\r\n  getContacts: () => dispatch(getContacts())\r\n});\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  getContacts: PropTypes.func,\r\n  \r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import { getContacts } from './redux/selectors';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport './App.css';\n\nfunction App({ contacts }) {\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm />\n        {contacts.length > 0 && \n          <>\n            <h2>Contacts</h2>\n            <Filter />\n          </>\n        }\n        <ContactList />\n      </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: getContacts(state),\n});\n\nApp.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default connect(mapStateToProps, null)(App);\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { \r\n  getContactsRequest, getContactsSuccess, getContactsError,\r\n  addContactRequest, addContactSuccess, addContactError,\r\n  deleteContactRequest, deleteContactSuccess, deleteContactError,\r\n  filterContacts\r\n} from './actions';\r\n\r\nconst items = createReducer(\r\n  [],\r\n  {\r\n    [getContactsSuccess]: (_, { payload }) => payload,\r\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n    [deleteContactSuccess]: (state, { payload }) =>\r\n      state.filter(contact => contact.id !== payload),\r\n  },\r\n);\r\n\r\nconst filter = createReducer('', {\r\n  [filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [getContactsRequest]: () => true,\r\n  [getContactsSuccess]: () => false,\r\n  [getContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [getContactsError]: (_, {payload}) => payload,\r\n  [addContactError]: (_, {payload}) => payload,\r\n  [deleteContactError]: (_, {payload}) => payload,\r\n});\r\n\r\nconst combineReducer = combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n})\r\n\r\nexport { combineReducer }\r\n\r\n// const INITIAL_STATE = {\r\n//   contacts: {\r\n//     items: [\r\n      //   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      //   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      //   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      //   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n      // ],\r\n//     filter: '',\r\n//   }\r\n// }\r\n\r\n// const filterReducer = (state = INITIAL_STATE.contacts, { type, payload }) => {\r\n//   switch (type) {\r\n//     case FILTER:\r\n//       return {\r\n//         ...state,\r\n//         filter: payload,\r\n//       };\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const contactsReducer = (state = INITIAL_STATE.contacts, { type, payload }) => {\r\n//   switch (type) {\r\n//     case ADD:\r\n//       if (state.items.some(({ name }) => name === payload.name)) {\r\n//         alert(`${payload.name} is already exists`);\r\n//         return {...state};\r\n//       }\r\n//       return {\r\n//         ...state, \r\n//         items: [...state.items, payload]\r\n//       };\r\n\r\n//     case DELETE:\r\n//       const itemsAfterDeleteContact = state.items.filter(({ id }) => id !== payload);\r\n//       return {\r\n//         ...state,\r\n//         items: itemsAfterDeleteContact,\r\n//       }\r\n       \r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const combineReducer = combineReducers({\r\n//   contacts: contactsReducer,\r\n//   filter: filterReducer,\r\n// })","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { \r\n    FLUSH, \r\n    REHYDRATE, \r\n    PAUSE, \r\n    PERSIST, \r\n    PURGE, \r\n    REGISTER \r\n} from 'redux-persist';\r\nimport logger from 'redux-logger'\r\nimport { combineReducer } from \"./redusers\";\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n         },\r\n    }), \r\n    logger,\r\n];\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: combineReducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport { store };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n       <App />\n      </Provider>  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}